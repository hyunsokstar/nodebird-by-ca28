"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./reducers/post.js":
/*!**************************!*\
  !*** ./reducers/post.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initialState\": function() { return /* binding */ initialState; },\n/* harmony export */   \"generateDummyPost\": function() { return /* binding */ generateDummyPost; },\n/* harmony export */   \"REMOVE_POST_REQUEST\": function() { return /* binding */ REMOVE_POST_REQUEST; },\n/* harmony export */   \"REMOVE_POST_SUCCESS\": function() { return /* binding */ REMOVE_POST_SUCCESS; },\n/* harmony export */   \"REMOVE_POST_FAILURE\": function() { return /* binding */ REMOVE_POST_FAILURE; },\n/* harmony export */   \"ADD_COMMENT_REQUEST\": function() { return /* binding */ ADD_COMMENT_REQUEST; },\n/* harmony export */   \"ADD_COMMENT_SUCCESS\": function() { return /* binding */ ADD_COMMENT_SUCCESS; },\n/* harmony export */   \"ADD_COMMENT_FAILURE\": function() { return /* binding */ ADD_COMMENT_FAILURE; },\n/* harmony export */   \"ADD_POST_REQUEST\": function() { return /* binding */ ADD_POST_REQUEST; },\n/* harmony export */   \"ADD_POST_SUCCESS\": function() { return /* binding */ ADD_POST_SUCCESS; },\n/* harmony export */   \"ADD_POST_FAILURE\": function() { return /* binding */ ADD_POST_FAILURE; }\n/* harmony export */ });\n/* harmony import */ var D_prepare_front_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! shortid */ \"./node_modules/shortid/index.js\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(shortid__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var immer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! immer */ \"./node_modules/immer/dist/immer.esm.js\");\n/* harmony import */ var faker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! faker */ \"./node_modules/faker/index.js\");\n/* harmony import */ var faker__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(faker__WEBPACK_IMPORTED_MODULE_2__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,D_prepare_front_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\nvar initialState = {\n  mainPosts: [],\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n}; // 게시글 생성(using faker) 함수 \n\nvar generateDummyPost = function generateDummyPost(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortid__WEBPACK_IMPORTED_MODULE_1___default().generate(),\n      User: {\n        id: shortid__WEBPACK_IMPORTED_MODULE_1___default().generate(),\n        nickname: faker__WEBPACK_IMPORTED_MODULE_2___default().name.findName()\n      },\n      content: faker__WEBPACK_IMPORTED_MODULE_2___default().lorem.paragraph(),\n      Images: [{\n        src: faker__WEBPACK_IMPORTED_MODULE_2___default().image.business()\n      }],\n      Commeents: [{\n        User: {\n          id: shortid__WEBPACK_IMPORTED_MODULE_1___default().generate(),\n          nickname: faker__WEBPACK_IMPORTED_MODULE_2___default().name.findName()\n        },\n        content: faker__WEBPACK_IMPORTED_MODULE_2___default().lorem.sentence()\n      }]\n    };\n  });\n}; // 최초 게시글 10개 설정\n\ninitialState.mainPosts = initialState.mainPosts.concat(generateDummyPost(10));\nvar REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nvar REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nvar REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nvar ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nvar ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nvar ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortid__WEBPACK_IMPORTED_MODULE_1___default().generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    }\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    Images: [],\n    Comments: []\n  };\n}; // export const ADD_POST = 'ADD_POST';\n\n\nvar ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nvar ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nvar ADD_POST_FAILURE = 'ADD_POST_FAILURE'; // export const addPost = {\n//   type: ADD_POST,\n// };\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return (0,immer__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        // return {\n        //     ...state,\n        //     addPostLoading: true,\n        //     addPostDone: false,\n        //     addPostError: null,\n        // };\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        // return {\n        //     ...state,\n        //     mainPosts: [dummyPost(action.data), ...state.mainPosts],\n        //     addPostLoading: false,\n        //     addPostDone: true,\n        // };\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        // return {\n        //     ...state,\n        //     addPostLoading: false,\n        //     addPostError: action.error,\n        // };\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          removePostLoading: true,\n          removePostDone: false,\n          removePostError: null\n        });\n\n      case REMOVE_POST_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          // filter 의 각각의 요소가 v로 전달 되며 \n          // v.id !== action.data(=post.id) 인것들로 다시 재구성 \n          mainPosts: state.mainPosts.filter(function (v) {\n            console.log(\"삭제할 id : \", action.data);\n            return v.id !== action.data;\n          }),\n          removePostLoading: false,\n          removePostDone: true\n        });\n\n      case REMOVE_POST_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          removePostLoading: false,\n          removePostError: action.error\n        });\n\n      case ADD_COMMENT_REQUEST:\n        // return {\n        //     ...state,\n        //     addCommentLoading: true,\n        //     addCommentDone: false,\n        //     addCommentError: null,\n        // };\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        // // 사가에서 넘어온 postId를 이용해 원래 게시글 정보 찾기\n        // const postIndex = state.mainPosts.findIndex(\n        //     (v) => v.id === action.data.postId\n        // );\n        // const post = { ...state.mainPosts[postIndex] };\n        // // 원래 댓글 정보 + 새로운 댓글 정보로 댓글 정보 재구성\n        // const Comments = [\n        //     dummyComment(action.data.content),\n        //     ...post.Comments,\n        // ];\n        // // 원래 게시글 정보의 게시글과 댓글 정보를 재구성 \n        // const mainPosts = [...state.mainPosts]\n        // mainPosts[postIndex] = { ...post, Comments };\n        // return {\n        //     ...state,\n        //     mainPosts,\n        //     addCommentLoading: false,\n        //     addCommentDone: true,\n        // };\n        // 댓글이 달릴 포스팅 객체 찾기\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.postId;\n        });\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        // return {\n        //     ...state,\n        //     addCommentLoading: false,\n        //     addCommentError: action.error,\n        // };\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        return state;\n    }\n  });\n}); // const reducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     // case ADD_POST: {\n//     //   return {\n//     //       ...state,\n//     //       mainPosts: [dummyPost, ...state.mainPosts],\n//     //       postAdded: true,\n//     //   };\n//     // }\n//   }\n// };\n// export default reducer;\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./reducers/post.js\n");

/***/ })

});